name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '24 5 * * 5'

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          # List the languages you want to analyze. Adjust as needed.
          languages: 'javascript'
          # You can optionally specify queries here.
          # queries: security-extended,security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Upload CodeQL Database
        uses: actions/upload-artifact@v4
        with:
          name: codeql-database
          path: /home/runner/work/_temp/codeql_databases/javascript.zip

  export_sarif:
    name: Export CodeQL SARIF Results
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: Download CodeQL Database
        uses: actions/download-artifact@v4
        with:
          name: codeql-database
          path: codeql-database

      - name: Setup CodeQL CLI
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          tools: latest

      - name: Generate SARIF from Database
        run: |
          codeql database analyze codeql-database \
            --format=sarif-latest \
            --output=results.sarif \
            --sarif-category=javascript

      - name: Upload SARIF Artifact
        uses: actions/upload-artifact@v4
        with:
          name: codeql-compliance-sarif
          path: results.sarif

  build:
    name: Build and Save Docker Image
    runs-on: ubuntu-latest
    # This job depends on the analysis job. Remove or adjust "needs" if you wish to run concurrently.
    needs: analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image for archon-demo-node-app
        run: docker build . -t archon-demo-node-app:latest

      - name: Save Docker image to TAR file
        run: docker save archon-demo-node-app:latest -o archon-demo-node-app.tar

      - name: Upload TAR artifact
        uses: actions/upload-artifact@v4.1.0
        with:
          name: docker-image-tar
          path: archon-demo-node-app.tar
      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v2.2.3
